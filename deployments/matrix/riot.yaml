apiVersion: v1
kind: Namespace
metadata:
    name: matrix

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: riot
  name: riot
  namespace: matrix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: riot
  template:
    metadata:
      labels:
        app: riot
    spec:
      containers:
        - image: vectorim/element-web:latest
          name: riot
          ports:
            - containerPort: 80
              name: riot
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
      volumes:
      - name: data
        hostPath:
          path: /docker/matrix/riot
          type: Directory
      nodeSelector:
        kubernetes.io/hostname: "ovh02"
      imagePullSecrets:
        - name: dockerhub-secret

---
kind: Service
apiVersion: v1
metadata:
  name: riot
  namespace: matrix
spec:
  type: NodePort

  selector:
    app: riot

  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: riot


---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: riot
  namespace: matrix
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`riot.adriangonzalezbarbosa.eu`)
      services:
        - name: riot
          port: 80
  tls:
      secretName: riot.adriangonzalezbarbosa.eu

# letsencrypt-cert.yaml
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: riot.adriangonzalezbarbosa.eu
  namespace: matrix
spec:
  dnsNames:
    - riot.adriangonzalezbarbosa.eu
  secretName: riot.adriangonzalezbarbosa.eu
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer